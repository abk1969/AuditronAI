services:
  frontend:
    build: 
      context: ./AuditronAI/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./AuditronAI/frontend:/app
      - ./AuditronAI/frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - /app/node_modules

  backend:
    build: 
      context: ./AuditronAI/backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - POSTGRES_USER=auditronai
      - POSTGRES_PASSWORD=auditronai
      - POSTGRES_DB=auditronai
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - SECRET_KEY=development-secret-key
      - DEBUG=True
      - BASE_URL=http://localhost:8000
      - CORS_ORIGINS=http://localhost:3000
    volumes:
      - ./AuditronAI/backend:/app
    depends_on:
      - redis
      - rabbitmq
      - elasticsearch
      - db

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=auditronai
      - POSTGRES_PASSWORD=auditronai
      - POSTGRES_DB=auditronai
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auditronai"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  esdata:
  pgdata:
