#!/bin/bash
set -e

echo "üîç V√©rification de la documentation..."

# V√©rifier Sphinx
check_sphinx() {
    echo "V√©rification de Sphinx..."
    if [ -f "docs/conf.py" ] && [ -f "docs/Makefile" ]; then
        cd docs
        make html
        if [ -d "_build/html" ]; then
            echo "‚úÖ Documentation Sphinx g√©n√©r√©e avec succ√®s"
        else
            echo "‚ùå Erreur lors de la g√©n√©ration Sphinx"
            return 1
        fi
        cd ..
    else
        echo "‚ùå Configuration Sphinx manquante"
        return 1
    fi
}

# V√©rifier MkDocs
check_mkdocs() {
    echo "V√©rification de MkDocs..."
    if [ -f "mkdocs.yml" ]; then
        mkdocs build --strict
        if [ -d "site" ]; then
            echo "‚úÖ Documentation MkDocs g√©n√©r√©e avec succ√®s"
        else
            echo "‚ùå Erreur lors de la g√©n√©ration MkDocs"
            return 1
        fi
    else
        echo "‚ùå Configuration MkDocs manquante"
        return 1
    fi
}

# V√©rifier la couverture de la documentation
check_coverage() {
    echo "V√©rification de la couverture de la documentation..."
    
    # V√©rifier les guides essentiels
    local required_guides=(
        "docs/guides/installation.md"
        "docs/guides/usage.md"
        "docs/guides/deployment.md"
    )
    
    for guide in "${required_guides[@]}"; do
        if [ ! -f "$guide" ]; then
            echo "‚ùå Guide manquant: $guide"
            return 1
        fi
    done
    
    echo "‚úÖ Couverture de la documentation valid√©e"
}

# Ex√©cuter toutes les v√©rifications
check_sphinx
check_mkdocs
check_coverage

echo "‚úÖ V√©rification de la documentation termin√©e avec succ√®s" 