#!/bin/bash
set -e

echo "üîç V√©rification du backend..."

# V√©rifier l'environnement Python
check_python_env() {
    echo "V√©rification de l'environnement Python..."
    
    if [ ! -d "venv" ]; then
        echo "‚ùå Environnement virtuel manquant"
        return 1
    fi
    
    source venv/bin/activate
    
    if ! python -c "import fastapi" 2>/dev/null; then
        echo "‚ùå FastAPI n'est pas install√©"
        return 1
    fi
    
    echo "‚úÖ Environnement Python OK"
}

# V√©rifier la base de donn√©es
check_database() {
    echo "V√©rification de la base de donn√©es..."
    
    if ! PGPASSWORD=postgres psql -h localhost -U postgres -d auditronai -c '\dt' >/dev/null 2>&1; then
        echo "‚ùå Impossible de se connecter √† la base de donn√©es"
        return 1
    fi
    
    # V√©rifier les migrations
    if ! alembic current >/dev/null 2>&1; then
        echo "‚ùå Probl√®me avec les migrations Alembic"
        return 1
    fi
    
    echo "‚úÖ Base de donn√©es OK"
}

# V√©rifier l'API
check_api() {
    echo "D√©marrage du serveur de test..."
    python -m uvicorn app.main:app --host localhost --port 8000 --reload &
    PID=$!
    
    # Attendre le d√©marrage du serveur
    sleep 5
    
    # Tester l'API
    if curl -s http://localhost:8000/health | grep -q "ok"; then
        echo "‚úÖ API OK"
    else
        echo "‚ùå API ne r√©pond pas correctement"
        kill $PID
        return 1
    fi
    
    kill $PID
}

# Ex√©cuter toutes les v√©rifications
check_python_env
check_database
check_api

echo "‚úÖ V√©rification du backend termin√©e avec succ√®s" 